{"version":3,"sources":["types.ts","rolling.ts","stats.ts","index.ts"],"names":[],"mappings":";AAAA,aAAA,IAAY,EAAZ,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,sBAAA,EAAA,QAAA,iBAAA,EAAA,SAAY,GACV,EAAA,EAAA,iBAAA,GAAA,mBACA,EAAA,EAAA,kBAAA,GAAA,oBACA,EAAA,EAAA,IAAA,GAAA,MAHF,CAAY,IAAA,QAAA,iBAAA,EAAgB;;AC2B3B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,IAAA,QAAA,kBAAA,QAAA,sBAAA,EA3BM,IAAM,EAAmB,WACxB,IAAA,EAAW,CAAC,EAAQ,GAAI,EAAQ,GAAI,EAAQ,GAAI,EAAQ,IAExD,EAAa,KAAK,IAAG,MAAR,KAAY,GAIxB,OAFY,EAAS,OAAO,SAAC,EAAK,GAAS,OAAA,EAAM,GAAM,GAAK,GAsBpE,QAAA,iBAAA,EAjBM,IAAM,EAAoB,WACzB,IAAA,EAAW,CAAC,EAAQ,GAAI,EAAQ,GAAI,EAAQ,GAAI,EAAQ,IAExD,EAAc,KAAK,IAAG,MAAR,KAAY,GAKzB,OAFL,EAAS,OAAO,SAAC,EAAK,GAAS,OAAA,EAAM,GAAM,GAAK,GAWnD,QAAA,kBAAA,EANM,IAAM,EAAM,WACV,OAAA,EAAQ,KAGjB,SAAS,EAAQ,GACR,OAAA,KAAK,KAAK,KAAK,SAAW,GAClC,QAAA,IAAA;;AC0BM,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,QAAA,iBAAA,EArDP,IAAA,EAAA,QAAA,WACA,EAAA,QAAA,aAEa,EAAc,SAAC,GACpB,IAAA,EAAW,CACf,IAAK,EAAa,GAClB,IAAK,EAAa,GAClB,IAAK,EAAa,GAClB,IAAK,EAAa,GAClB,IAAK,EAAa,GAClB,IAAK,EAAa,GAClB,cAAe,GAKV,OAFP,EAAS,cAAgB,EAAuB,GAEzC,GAGT,SAAS,EAAa,GACZ,OAAA,EAAS,QACV,KAAA,EAAiB,iBAAA,iBACb,OAAA,EAAP,EAAA,oBAGG,KAAA,EAAiB,iBAAA,kBACb,OAAA,EAAP,EAAA,qBAGG,KAAA,EAAiB,iBAAA,IACb,OAAA,EAAP,EAAA,OAGF,QACS,OAAA,GAIb,SAAS,EAAuB,GAE5B,OAAA,EAAkB,EAAM,KACxB,EAAkB,EAAM,KACxB,EAAkB,EAAM,KACxB,EAAkB,EAAM,KACxB,EAAkB,EAAM,KACxB,EAAkB,EAAM,KAI5B,SAAS,EAAkB,GAClB,OAAA,KAAK,MAAM,EAAO,EAAI,GAGxB,QAAA,YAAA,EAAA,IAAM,EAAY,SAAC,GACjB,OAAA,EAAa,IADf,QAAA,UAAA;;ACuEN,aA5HD,IAAA,EAAA,QAAA,WACA,EAAA,QAAA,WAEM,EAAqB,CACzB,OAAQ,EAAiB,iBAAA,kBAK3B,SAAS,IAmHR,IAAA,EAAA,EA/GoB,QAAnB,EAH4B,SAAS,eACnC,4BAEiB,IAAA,GAAA,EAAE,iBAAiB,QAAS,GAKlB,QAA7B,EAHsC,SAAS,eAC7C,wBAE2B,IAAA,GAAA,EAAE,iBAAiB,SAAU,GAG5D,SAAS,IACD,IAAA,GAAQ,EAAY,EAAA,aAAA,GAE1B,EAAuB,MAAO,EAAM,IAAI,YACxC,EAAuB,MAAO,EAAM,IAAI,YACxC,EAAuB,MAAO,EAAM,IAAI,YACxC,EAAuB,MAAO,EAAM,IAAI,YACxC,EAAuB,MAAO,EAAM,IAAI,YACxC,EAAuB,MAAO,EAAM,IAAI,YACxC,EAAuB,YAAa,EAAM,cAAc,YAExD,IAGF,SAAS,EAAuB,EAAoB,GAC5C,IAAA,EAAU,SAAS,eAAe,GAEnC,IAIL,EAAQ,UAAY,GAGtB,SAAS,IACD,IAAA,EAAuB,SAAS,cACpC,mBAGE,GAAC,EAAD,CAIE,IAAA,EAAe,EAAqB,cACxC,mBAGE,GAAC,GAAiB,EAAa,cAA/B,CAIJ,EAAa,iBAAiB,QAAS,GAEjC,IAAA,EAAgB,SAAS,eAAe,WAE9C,EAAwB,GAAc,GACtC,EAAwB,EAAc,eAAe,KAGvD,SAAS,EAAmB,GAsD3B,IAAA,EAnDC,OAAqB,QAArB,EAFsB,EAAM,qBAEP,IAAA,OAAA,EAAA,EAAE,OAChB,IAAA,gBAEH,YADA,EAAS,OAAS,EAAiB,iBAAA,kBAIhC,IAAA,iBAEH,YADA,EAAS,OAAS,EAAiB,iBAAA,mBAIhC,IAAA,MAEH,YADA,EAAS,OAAS,EAAiB,iBAAA,KAIrC,QACE,QAIN,SAAS,EAAkB,GAGzB,EAFsB,EAAM,eAEW,GAEjC,IAAA,EAAgB,SAAS,eAAe,WAE1C,GAAC,EAAD,CAIE,IAAA,GAAS,EAAU,EAAA,WAAA,GAEzB,EAAc,UAAY,EAAO,WACjC,EAAwB,EAAc,eAAe,IAGvD,SAAS,EACP,EACA,GAEK,IAKH,EAAQ,MAAM,WADZ,EACyB,UAEA,UAnH/B","file":"src.f4c23dbe.js","sourceRoot":"../src","sourcesContent":["export enum GeneratingMethod {\r\n  FourD6DropLowest,\r\n  FourD6DropHighest,\r\n  D20\r\n}\r\n\r\nexport type Settings = {\r\n  method: GeneratingMethod;\r\n};\r\n\r\nexport type Stats = {\r\n  str: number;\r\n  dex: number;\r\n  con: number;\r\n  int: number;\r\n  wis: number;\r\n  cha: number;\r\n  totalModifier: number;\r\n};\r\n","export const fourD6DropLowest = (): number => {\r\n  const dieRolls = [rollDie(6), rollDie(6), rollDie(6), rollDie(6)];\r\n\r\n  const lowestRoll = Math.min(...dieRolls);\r\n\r\n  const sumOfRolls = dieRolls.reduce((sum, roll) => sum + roll, 0) - lowestRoll;\r\n\r\n  return sumOfRolls;\r\n};\r\n\r\nexport const fourD6DropHighest = (): number => {\r\n  const dieRolls = [rollDie(6), rollDie(6), rollDie(6), rollDie(6)];\r\n\r\n  const highestRoll = Math.max(...dieRolls);\r\n\r\n  const sumOfRolls =\r\n    dieRolls.reduce((sum, roll) => sum + roll, 0) - highestRoll;\r\n\r\n  return sumOfRolls;\r\n};\r\n\r\nexport const d20 = (): number => {\r\n  return rollDie(20);\r\n};\r\n\r\nfunction rollDie(size: number): number {\r\n  return Math.ceil(Math.random() * size);\r\n}\r\n","import { Stats, GeneratingMethod, Settings } from './types';\r\nimport { fourD6DropLowest, fourD6DropHighest, d20 } from './rolling';\r\n\r\nexport const getNewStats = (settings: Settings): Stats => {\r\n  const newStats = {\r\n    str: generateStat(settings),\r\n    dex: generateStat(settings),\r\n    con: generateStat(settings),\r\n    int: generateStat(settings),\r\n    wis: generateStat(settings),\r\n    cha: generateStat(settings),\r\n    totalModifier: 0\r\n  };\r\n\r\n  newStats.totalModifier = calculateTotalModifier(newStats);\r\n\r\n  return newStats;\r\n};\r\n\r\nfunction generateStat(settings: Settings): number {\r\n  switch (settings.method) {\r\n    case GeneratingMethod.FourD6DropLowest: {\r\n      return fourD6DropLowest();\r\n    }\r\n\r\n    case GeneratingMethod.FourD6DropHighest: {\r\n      return fourD6DropHighest();\r\n    }\r\n\r\n    case GeneratingMethod.D20: {\r\n      return d20();\r\n    }\r\n\r\n    default:\r\n      return 0;\r\n  }\r\n}\r\n\r\nfunction calculateTotalModifier(stats: Stats): number {\r\n  return (\r\n    calculateModifier(stats.str) +\r\n    calculateModifier(stats.dex) +\r\n    calculateModifier(stats.con) +\r\n    calculateModifier(stats.int) +\r\n    calculateModifier(stats.wis) +\r\n    calculateModifier(stats.cha)\r\n  );\r\n}\r\n\r\nfunction calculateModifier(stat: number): number {\r\n  return Math.floor(stat / 2 - 5);\r\n}\r\n\r\nexport const getReRoll = (settings: Settings): number => {\r\n  return generateStat(settings);\r\n};\r\n","import { Settings, GeneratingMethod } from './types';\r\nimport { getNewStats, getReRoll } from './stats';\r\n\r\nconst settings: Settings = {\r\n  method: GeneratingMethod.FourD6DropLowest\r\n};\r\n\r\nregisterEventHandlers();\r\n\r\nfunction registerEventHandlers() {\r\n  const generateStatsButton = document.getElementById(\r\n    'give_stats_button'\r\n  ) as HTMLButtonElement;\r\n  generateStatsButton?.addEventListener('click', generateStatsButtonHandler);\r\n\r\n  const changeGeneratorMethodSelector = document.getElementById(\r\n    'method_select'\r\n  ) as HTMLSelectElement;\r\n  changeGeneratorMethodSelector?.addEventListener('change', handleMethodChange);\r\n}\r\n\r\nfunction generateStatsButtonHandler() {\r\n  const stats = getNewStats(settings);\r\n\r\n  updateElementWithValue('str', stats.str.toString());\r\n  updateElementWithValue('dex', stats.dex.toString());\r\n  updateElementWithValue('con', stats.con.toString());\r\n  updateElementWithValue('int', stats.int.toString());\r\n  updateElementWithValue('wis', stats.wis.toString());\r\n  updateElementWithValue('cha', stats.cha.toString());\r\n  updateElementWithValue('total_mod', stats.totalModifier.toString());\r\n\r\n  makeRerollVisible();\r\n}\r\n\r\nfunction updateElementWithValue(identifier: string, value: string) {\r\n  const element = document.getElementById(identifier);\r\n\r\n  if (!element) {\r\n    return;\r\n  }\r\n\r\n  element.innerText = value;\r\n}\r\n\r\nfunction makeRerollVisible() {\r\n  const rerollSectionElement = document.querySelector(\r\n    'section.re_roll'\r\n  ) as HTMLElement;\r\n\r\n  if (!rerollSectionElement) {\r\n    return;\r\n  }\r\n\r\n  const reRollButton = rerollSectionElement.querySelector(\r\n    '#re_roll_button'\r\n  ) as HTMLButtonElement;\r\n\r\n  if (!reRollButton || !reRollButton.parentElement) {\r\n    return;\r\n  }\r\n\r\n  reRollButton.addEventListener('click', handleRerollClick);\r\n\r\n  const reRollElement = document.getElementById('re_roll') as HTMLSpanElement;\r\n\r\n  toggleElementVisibility(reRollButton, true);\r\n  toggleElementVisibility(reRollElement.parentElement, false);\r\n}\r\n\r\nfunction handleMethodChange(event: Event) {\r\n  const currentTarget = event.currentTarget as HTMLSelectElement;\r\n\r\n  switch (currentTarget?.value) {\r\n    case '4D6DropLowest': {\r\n      settings.method = GeneratingMethod.FourD6DropLowest;\r\n      return;\r\n    }\r\n\r\n    case '4D6DropHighest': {\r\n      settings.method = GeneratingMethod.FourD6DropHighest;\r\n      return;\r\n    }\r\n\r\n    case 'D20': {\r\n      settings.method = GeneratingMethod.D20;\r\n      return;\r\n    }\r\n\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nfunction handleRerollClick(event: Event) {\r\n  const currentTarget = event.currentTarget as HTMLButtonElement;\r\n\r\n  toggleElementVisibility(currentTarget, false);\r\n\r\n  const reRollElement = document.getElementById('re_roll') as HTMLSpanElement;\r\n\r\n  if (!reRollElement) {\r\n    return;\r\n  }\r\n\r\n  const reRoll = getReRoll(settings);\r\n\r\n  reRollElement.innerText = reRoll.toString();\r\n  toggleElementVisibility(reRollElement.parentElement, true);\r\n}\r\n\r\nfunction toggleElementVisibility(\r\n  element: HTMLElement | null,\r\n  visible: boolean\r\n) {\r\n  if (!element) {\r\n    return;\r\n  }\r\n\r\n  if (visible) {\r\n    element.style.visibility = 'visible';\r\n  } else {\r\n    element.style.visibility = 'hidden';\r\n  }\r\n}\r\n"]}